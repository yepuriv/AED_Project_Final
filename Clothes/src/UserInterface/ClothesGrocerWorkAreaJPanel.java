/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.QualityCheckEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.GroceryOrganization;
import Business.Organization.QualityOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FoodRequirementRequest;
import Business.WorkQueue.Inventory;
import Business.WorkQueue.InventoryDirectory;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.Products;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akshitvarma
 */
public class ClothesGrocerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PackagingWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private FoodRequirementRequest request;
    private GroceryOrganization groceryOrganization;
    
    public ClothesGrocerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, GroceryOrganization groceryOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise=enterprise;
        this.groceryOrganization = (GroceryOrganization)groceryOrganization;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ClothesDashjLabel = new javax.swing.JLabel();
        refreshpageJButton = new javax.swing.JButton();
        btnSentToSup = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequesttocheckJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        displayProductBtn = new javax.swing.JButton();
        ProductsenterpriseLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setToolTipText("");

        ClothesDashjLabel.setFont(new java.awt.Font("Academy Engraved LET", 1, 24)); // NOI18N
        ClothesDashjLabel.setText("Clothes Dashboard");

        refreshpageJButton.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        refreshpageJButton.setText("Refresh");
        refreshpageJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshpageJButtonActionPerformed(evt);
            }
        });

        btnSentToSup.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        btnSentToSup.setText("Request Fulfilled");
        btnSentToSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSentToSupActionPerformed(evt);
            }
        });

        workRequesttocheckJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequesttocheckJTable);

        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clothes Type", "Product", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableProducts);

        displayProductBtn.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        displayProductBtn.setText("Display Product");
        displayProductBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayProductBtnActionPerformed(evt);
            }
        });

        ProductsenterpriseLabel2.setFont(new java.awt.Font("Academy Engraved LET", 1, 24)); // NOI18N
        ProductsenterpriseLabel2.setText("Products");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSentToSup)
                        .addContainerGap(881, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ClothesDashjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(refreshpageJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(ProductsenterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(displayProductBtn)))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClothesDashjLabel)
                    .addComponent(refreshpageJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btnSentToSup, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayProductBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductsenterpriseLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshpageJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshpageJButtonActionPerformed
        populateTable();
        JOptionPane.showMessageDialog(null, "Requests Updated!");
    }//GEN-LAST:event_refreshpageJButtonActionPerformed

    private void btnSentToSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSentToSupActionPerformed

        int selectedRow = workRequesttocheckJTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        }
        FoodRequirementRequest request = (FoodRequirementRequest) workRequesttocheckJTable.getValueAt(selectedRow, 0);

        request.setStatus("Sent to Quality");
        if (request.getReceiver() == userAccount) {
            this.request.setReceiver(null);
        }

            for (Network n : business.getNetworkList()) {

                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {

                    if (e instanceof QualityCheckEnterprise) {

                        for (Organization organization : e.getOrganizationDirectory().getOrganizationList()) {
                            if (organization instanceof QualityOrganization) { //changed from grocery to qualityCheck organization
                                organization.getWorkQueue().getWorkRequestList().add(request);
                                userAccount.getWorkQueue().getWorkRequestList().add(request);
                                break;
                            }
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Request successfully fulfilled!!");
    }//GEN-LAST:event_btnSentToSupActionPerformed

    private void displayProductBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayProductBtnActionPerformed

        int selectedRow = workRequesttocheckJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tableProducts.getModel();
        model.setRowCount(0);
        model.setRowCount(0);

        WorkRequest Foodrequest = (WorkRequest) workRequesttocheckJTable.getValueAt(selectedRow, 0);

        ArrayList<Products> productList = ((FoodRequirementRequest) Foodrequest).getProductList();
        if (productList != null) {
            for (Products p : productList) {
                Object row[] = new Object[3];
                row[0] = p;
                row[1] = p.getProductName();
                row[2] = p.getQuantity();
                model.addRow(row);

            }
        }
    }//GEN-LAST:event_displayProductBtnActionPerformed

    
    public void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel)workRequesttocheckJTable.getModel();
        
        model.setRowCount(0);
      
        if(groceryOrganization.getWorkQueue().getWorkRequestList().size() > 0) {
            for( WorkRequest request : groceryOrganization.getWorkQueue().getWorkRequestList()) {
                Object[] row = new Object[4];
                row[0] = request;
                row[1] = request.getSender().getEmployee().getName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                row[3] = request.getStatus();

                model.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ClothesDashjLabel;
    private javax.swing.JLabel ProductsenterpriseLabel2;
    private javax.swing.JButton btnSentToSup;
    private javax.swing.JButton displayProductBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshpageJButton;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTable workRequesttocheckJTable;
    // End of variables declaration//GEN-END:variables
}
